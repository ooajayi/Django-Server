# Generated by Django 4.1.4 on 2023-05-02 02:59

import core.models.classifieds
import core.models.common
import core.models.util
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('taggit', '0005_auto_20220424_2025'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['first_name', 'last_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('file_type', models.CharField(blank=True, choices=[('unset', 'Not Set'), ('img', 'Image'), ('video', 'Video'), ('file', 'File'), ('pdf', 'PDF'), ('word', 'Word')], default='unset', max_length=9)),
                ('label', models.CharField(blank=True, max_length=200, null=True, verbose_name='File Label')),
                ('file', models.FileField(blank=True, null=True, upload_to=core.models.common.get_attachment_path, verbose_name='File')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='<function get_attachment_path at 0x0000017E8F90F0D0>/thubmnails/', verbose_name='File Thumbnail')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['label'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Is comment approved')),
                ('body', models.TextField(blank=True, null=True, verbose_name='Body')),
                ('is_flagged', models.BooleanField(default=False, verbose_name='Is comment flagged')),
                ('flag_reason', models.TextField(blank=True, null=True, verbose_name='Reason for flagging')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('dislikes', models.ManyToManyField(related_name='comments_disliked', to=settings.AUTH_USER_MODEL, verbose_name='Users who dislike comment')),
                ('flagged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments_flagged', to=settings.AUTH_USER_MODEL, verbose_name='User who flagged comment')),
                ('likes', models.ManyToManyField(related_name='comments_liked', to=settings.AUTH_USER_MODEL, verbose_name='Users who like comment')),
                ('made_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments_made', to=settings.AUTH_USER_MODEL, verbose_name='User who made comment')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Name')),
                ('email', models.CharField(max_length=100, verbose_name='Email')),
                ('status', models.CharField(choices=[('new', 'New'), ('responded', 'Replied'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('cancelled', 'Cancelled')], default='new', max_length=15)),
                ('reason', models.CharField(blank=True, max_length=256, null=True, verbose_name='Reason for Contact')),
                ('msg', models.TextField(blank=True, null=True, verbose_name='Contact Body')),
                ('resolution', models.TextField(blank=True, null=True, verbose_name='Resolution')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Contact Form',
                'verbose_name_plural': 'Contact Forms',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DCC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Site name')),
                ('title', models.CharField(blank=True, max_length=150, null=True, verbose_name='Site title')),
                ('def_logo', models.ImageField(max_length=150, upload_to='logos/', verbose_name='Default Logo')),
                ('alt_logo', models.ImageField(max_length=150, upload_to='logos/', verbose_name='Alternate Logo')),
                ('privacy_policy', models.FileField(blank=True, null=True, upload_to='legal/', verbose_name='Privacy Policy')),
                ('tandc', models.FileField(blank=True, null=True, upload_to='legal/', verbose_name='Terms and Conditions')),
                ('keywords', models.CharField(blank=True, max_length=150, null=True, verbose_name='Keywords')),
                ('facebook', models.CharField(blank=True, max_length=128, null=True, verbose_name='Facebook profile')),
                ('instagram', models.CharField(blank=True, max_length=128, null=True, verbose_name='Instagram')),
                ('twitter', models.CharField(blank=True, max_length=128, null=True, verbose_name='Twitter')),
                ('tiktok', models.CharField(blank=True, max_length=128, null=True, verbose_name='Tik Tok')),
                ('youtube', models.CharField(blank=True, max_length=128, null=True, verbose_name='Youtube')),
            ],
            options={
                'verbose_name': 'DCC',
                'verbose_name_plural': 'DCCs',
            },
        ),
        migrations.CreateModel(
            name='EmailSubscribers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=200, unique=True)),
                ('status', models.CharField(blank=True, max_length=64)),
                ('created_at', models.DateTimeField(blank=True)),
                ('updated_at', models.DateTimeField(blank=True)),
            ],
            options={
                'verbose_name': 'Email Subscriber',
                'verbose_name_plural': 'Email Subscribers',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Genre Slug')),
                ('name', models.CharField(max_length=150, verbose_name='Genre name')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Genre',
                'verbose_name_plural': 'Genre',
            },
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Interest Slug')),
                ('name', models.CharField(max_length=150, verbose_name='Interest name')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Interest',
                'verbose_name_plural': 'Interests',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
                ('address', models.CharField(blank=True, max_length=150, null=True, verbose_name='Address')),
                ('suite_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='Suite No')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=50, null=True, verbose_name='State')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Country')),
                ('postal_code', models.CharField(max_length=50, unique=True, verbose_name='Postal Code')),
                ('timezone', models.CharField(blank=True, choices=[('Asia/Krasnoyarsk', 'Asia/Krasnoyarsk'), ('America/Atka', 'America/Atka'), ('America/Montevideo', 'America/Montevideo'), ('America/Adak', 'America/Adak'), ('Asia/Dacca', 'Asia/Dacca'), ('Asia/Harbin', 'Asia/Harbin'), ('Etc/GMT-13', 'Etc/GMT-13'), ('Asia/Kuwait', 'Asia/Kuwait'), ('Asia/Yangon', 'Asia/Yangon'), ('Brazil/DeNoronha', 'Brazil/DeNoronha'), ('Indian/Mahe', 'Indian/Mahe'), ('Antarctica/Palmer', 'Antarctica/Palmer'), ('Asia/Hovd', 'Asia/Hovd'), ('Asia/Dhaka', 'Asia/Dhaka'), ('America/Tortola', 'America/Tortola'), ('Indian/Christmas', 'Indian/Christmas'), ('America/Vancouver', 'America/Vancouver'), ('Antarctica/Syowa', 'Antarctica/Syowa'), ('Asia/Dubai', 'Asia/Dubai'), ('America/Paramaribo', 'America/Paramaribo'), ('Asia/Calcutta', 'Asia/Calcutta'), ('Europe/Guernsey', 'Europe/Guernsey'), ('Australia/Brisbane', 'Australia/Brisbane'), ('Antarctica/Vostok', 'Antarctica/Vostok'), ('America/Scoresbysund', 'America/Scoresbysund'), ('ROC', 'ROC'), ('Asia/Dushanbe', 'Asia/Dushanbe'), ('Pacific/Truk', 'Pacific/Truk'), ('Australia/Melbourne', 'Australia/Melbourne'), ('America/Louisville', 'America/Louisville'), ('Asia/Kathmandu', 'Asia/Kathmandu'), ('HST', 'HST'), ('America/St_Johns', 'America/St Johns'), ('America/Danmarkshavn', 'America/Danmarkshavn'), ('Africa/Cairo', 'Africa/Cairo'), ('Africa/Dar_es_Salaam', 'Africa/Dar es Salaam'), ('Etc/GMT-5', 'Etc/GMT-5'), ('America/Argentina/Catamarca', 'America/Argentina/Catamarca'), ('Atlantic/St_Helena', 'Atlantic/St Helena'), ('America/St_Barthelemy', 'America/St Barthelemy'), ('Etc/GMT+1', 'Etc/GMT+1'), ('America/Yellowknife', 'America/Yellowknife'), ('Etc/GMT+2', 'Etc/GMT+2'), ('Pacific/Samoa', 'Pacific/Samoa'), ('America/Yakutat', 'America/Yakutat'), ('Poland', 'Poland'), ('Etc/GMT-0', 'Etc/GMT-0'), ('Africa/Nairobi', 'Africa/Nairobi'), ('Asia/Samarkand', 'Asia/Samarkand'), ('Pacific/Pago_Pago', 'Pacific/Pago Pago'), ('Etc/GMT-14', 'Etc/GMT-14'), ('Asia/Macao', 'Asia/Macao'), ('Europe/Athens', 'Europe/Athens'), ('America/Bahia', 'America/Bahia'), ('Pacific/Ponape', 'Pacific/Ponape'), ('America/Martinique', 'America/Martinique'), ('America/Jujuy', 'America/Jujuy'), ('Etc/GMT-10', 'Etc/GMT-10'), ('Africa/Nouakchott', 'Africa/Nouakchott'), ('Europe/Zurich', 'Europe/Zurich'), ('Pacific/Chuuk', 'Pacific/Chuuk'), ('Asia/Beirut', 'Asia/Beirut'), ('Europe/Warsaw', 'Europe/Warsaw'), ('Australia/Broken_Hill', 'Australia/Broken Hill'), ('America/Argentina/Rio_Gallegos', 'America/Argentina/Rio Gallegos'), ('Asia/Aden', 'Asia/Aden'), ('America/Manaus', 'America/Manaus'), ('Antarctica/Mawson', 'Antarctica/Mawson'), ('Europe/Kiev', 'Europe/Kiev'), ('Turkey', 'Turkey'), ('Asia/Qyzylorda', 'Asia/Qyzylorda'), ('Etc/GMT+6', 'Etc/GMT+6'), ('Indian/Antananarivo', 'Indian/Antananarivo'), ('America/Maceio', 'America/Maceio'), ('America/Moncton', 'America/Moncton'), ('Australia/NSW', 'Australia/NSW'), ('Asia/Katmandu', 'Asia/Katmandu'), ('America/Santo_Domingo', 'America/Santo Domingo'), ('Asia/Ho_Chi_Minh', 'Asia/Ho Chi Minh'), ('America/Guyana', 'America/Guyana'), ('Asia/Urumqi', 'Asia/Urumqi'), ('Etc/GMT-9', 'Etc/GMT-9'), ('Zulu', 'Zulu'), ('Asia/Chungking', 'Asia/Chungking'), ('Africa/Bujumbura', 'Africa/Bujumbura'), ('America/Port_of_Spain', 'America/Port of Spain'), ('Pacific/Saipan', 'Pacific/Saipan'), ('America/Mazatlan', 'America/Mazatlan'), ('NZ', 'NZ'), ('Africa/El_Aaiun', 'Africa/El Aaiun'), ('UCT', 'UCT'), ('Factory', 'Factory'), ('America/Santa_Isabel', 'America/Santa Isabel'), ('Antarctica/Macquarie', 'Antarctica/Macquarie'), ('Asia/Barnaul', 'Asia/Barnaul'), ('America/Phoenix', 'America/Phoenix'), ('America/Boa_Vista', 'America/Boa Vista'), ('GMT+0', 'GMT+0'), ('Etc/GMT-2', 'Etc/GMT-2'), ('America/Thule', 'America/Thule'), ('Asia/Macau', 'Asia/Macau'), ('America/St_Lucia', 'America/St Lucia'), ('Europe/Sarajevo', 'Europe/Sarajevo'), ('Africa/Johannesburg', 'Africa/Johannesburg'), ('America/Creston', 'America/Creston'), ('Asia/Phnom_Penh', 'Asia/Phnom Penh'), ('Asia/Dili', 'Asia/Dili'), ('Pacific/Kosrae', 'Pacific/Kosrae'), ('America/Sitka', 'America/Sitka'), ('America/Port-au-Prince', 'America/Port-au-Prince'), ('Africa/Lome', 'Africa/Lome'), ('Asia/Kashgar', 'Asia/Kashgar'), ('Australia/Canberra', 'Australia/Canberra'), ('Australia/Sydney', 'Australia/Sydney'), ('Asia/Qostanay', 'Asia/Qostanay'), ('Atlantic/Stanley', 'Atlantic/Stanley'), ('Etc/GMT+11', 'Etc/GMT+11'), ('Iceland', 'Iceland'), ('Africa/Harare', 'Africa/Harare'), ('America/Detroit', 'America/Detroit'), ('Asia/Tokyo', 'Asia/Tokyo'), ('Etc/GMT-7', 'Etc/GMT-7'), ('Pacific/Enderbury', 'Pacific/Enderbury'), ('Brazil/East', 'Brazil/East'), ('Canada/Central', 'Canada/Central'), ('Europe/Prague', 'Europe/Prague'), ('GB', 'GB'), ('US/Alaska', 'US/Alaska'), ('Asia/Nicosia', 'Asia/Nicosia'), ('Asia/Jerusalem', 'Asia/Jerusalem'), ('Europe/Zaporozhye', 'Europe/Zaporozhye'), ('Etc/Universal', 'Etc/Universal'), ('Pacific/Pitcairn', 'Pacific/Pitcairn'), ('America/Catamarca', 'America/Catamarca'), ('Chile/Continental', 'Chile/Continental'), ('Australia/Victoria', 'Australia/Victoria'), ('America/Merida', 'America/Merida'), ('Egypt', 'Egypt'), ('GMT', 'GMT'), ('Asia/Hong_Kong', 'Asia/Hong Kong'), ('America/Ojinaga', 'America/Ojinaga'), ('America/Puerto_Rico', 'America/Puerto Rico'), ('America/Barbados', 'America/Barbados'), ('Europe/Amsterdam', 'Europe/Amsterdam'), ('Hongkong', 'Hongkong'), ('Atlantic/Azores', 'Atlantic/Azores'), ('Iran', 'Iran'), ('Africa/Malabo', 'Africa/Malabo'), ('America/Argentina/Ushuaia', 'America/Argentina/Ushuaia'), ('Africa/Brazzaville', 'Africa/Brazzaville'), ('Europe/Tallinn', 'Europe/Tallinn'), ('America/Anchorage', 'America/Anchorage'), ('Asia/Singapore', 'Asia/Singapore'), ('America/Nipigon', 'America/Nipigon'), ('America/Campo_Grande', 'America/Campo Grande'), ('Europe/Astrakhan', 'Europe/Astrakhan'), ('Africa/Monrovia', 'Africa/Monrovia'), ('Asia/Pontianak', 'Asia/Pontianak'), ('Kwajalein', 'Kwajalein'), ('US/East-Indiana', 'US/East-Indiana'), ('America/Juneau', 'America/Juneau'), ('Etc/GMT+3', 'Etc/GMT+3'), ('Asia/Colombo', 'Asia/Colombo'), ('America/Asuncion', 'America/Asuncion'), ('Asia/Yerevan', 'Asia/Yerevan'), ('Africa/Freetown', 'Africa/Freetown'), ('Europe/Bratislava', 'Europe/Bratislava'), ('America/Buenos_Aires', 'America/Buenos Aires'), ('Pacific/Pohnpei', 'Pacific/Pohnpei'), ('Australia/South', 'Australia/South'), ('Etc/GMT-11', 'Etc/GMT-11'), ('Africa/Blantyre', 'Africa/Blantyre'), ('America/Nassau', 'America/Nassau'), ('Asia/Muscat', 'Asia/Muscat'), ('America/Regina', 'America/Regina'), ('Africa/Banjul', 'Africa/Banjul'), ('Jamaica', 'Jamaica'), ('Asia/Rangoon', 'Asia/Rangoon'), ('Europe/Belfast', 'Europe/Belfast'), ('Africa/Ndjamena', 'Africa/Ndjamena'), ('America/Indiana/Indianapolis', 'America/Indiana/Indianapolis'), ('Europe/Vatican', 'Europe/Vatican'), ('Europe/Zagreb', 'Europe/Zagreb'), ('Mexico/General', 'Mexico/General'), ('Africa/Mbabane', 'Africa/Mbabane'), ('Asia/Jayapura', 'Asia/Jayapura'), ('Europe/San_Marino', 'Europe/San Marino'), ('Europe/Skopje', 'Europe/Skopje'), ('America/Santarem', 'America/Santarem'), ('Pacific/Palau', 'Pacific/Palau'), ('America/Mendoza', 'America/Mendoza'), ('Europe/Kirov', 'Europe/Kirov'), ('Australia/Queensland', 'Australia/Queensland'), ('Europe/Samara', 'Europe/Samara'), ('Europe/Lisbon', 'Europe/Lisbon'), ('Mexico/BajaNorte', 'Mexico/BajaNorte'), ('Africa/Gaborone', 'Africa/Gaborone'), ('Pacific/Tongatapu', 'Pacific/Tongatapu'), ('America/Pangnirtung', 'America/Pangnirtung'), ('Europe/Stockholm', 'Europe/Stockholm'), ('Europe/Ulyanovsk', 'Europe/Ulyanovsk'), ('Pacific/Guam', 'Pacific/Guam'), ('Indian/Mauritius', 'Indian/Mauritius'), ('Europe/Andorra', 'Europe/Andorra'), ('America/Indiana/Vincennes', 'America/Indiana/Vincennes'), ('America/Halifax', 'America/Halifax'), ('Africa/Lubumbashi', 'Africa/Lubumbashi'), ('Antarctica/Rothera', 'Antarctica/Rothera'), ('Africa/Niamey', 'Africa/Niamey'), ('Europe/Minsk', 'Europe/Minsk'), ('Asia/Tashkent', 'Asia/Tashkent'), ('America/Tijuana', 'America/Tijuana'), ('Asia/Pyongyang', 'Asia/Pyongyang'), ('Asia/Khandyga', 'Asia/Khandyga'), ('US/Indiana-Starke', 'US/Indiana-Starke'), ('Japan', 'Japan'), ('Europe/Luxembourg', 'Europe/Luxembourg'), ('America/Dawson_Creek', 'America/Dawson Creek'), ('Australia/North', 'Australia/North'), ('PST8PDT', 'PST8PDT'), ('Libya', 'Libya'), ('Pacific/Guadalcanal', 'Pacific/Guadalcanal'), ('Asia/Thimphu', 'Asia/Thimphu'), ('Indian/Kerguelen', 'Indian/Kerguelen'), ('Pacific/Efate', 'Pacific/Efate'), ('Atlantic/Faeroe', 'Atlantic/Faeroe'), ('America/Montserrat', 'America/Montserrat'), ('Africa/Bamako', 'Africa/Bamako'), ('America/Argentina/Cordoba', 'America/Argentina/Cordoba'), ('UTC', 'UTC'), ('Asia/Vladivostok', 'Asia/Vladivostok'), ('Asia/Aqtau', 'Asia/Aqtau'), ('America/Lower_Princes', 'America/Lower Princes'), ('Eire', 'Eire'), ('Canada/Eastern', 'Canada/Eastern'), ('Asia/Kuala_Lumpur', 'Asia/Kuala Lumpur'), ('Asia/Ashkhabad', 'Asia/Ashkhabad'), ('Etc/GMT-3', 'Etc/GMT-3'), ('Asia/Yekaterinburg', 'Asia/Yekaterinburg'), ('America/Argentina/Buenos_Aires', 'America/Argentina/Buenos Aires'), ('America/Fortaleza', 'America/Fortaleza'), ('Africa/Libreville', 'Africa/Libreville'), ('GB-Eire', 'GB-Eire'), ('Universal', 'Universal'), ('America/Argentina/Mendoza', 'America/Argentina/Mendoza'), ('Africa/Lusaka', 'Africa/Lusaka'), ('America/St_Thomas', 'America/St Thomas'), ('Asia/Tbilisi', 'Asia/Tbilisi'), ('America/North_Dakota/New_Salem', 'America/North Dakota/New Salem'), ('ROK', 'ROK'), ('Asia/Tomsk', 'Asia/Tomsk'), ('Asia/Hebron', 'Asia/Hebron'), ('America/Cayenne', 'America/Cayenne'), ('Asia/Kolkata', 'Asia/Kolkata'), ('Pacific/Easter', 'Pacific/Easter'), ('Africa/Dakar', 'Africa/Dakar'), ('Asia/Oral', 'Asia/Oral'), ('Pacific/Honolulu', 'Pacific/Honolulu'), ('Pacific/Yap', 'Pacific/Yap'), ('Etc/GMT+5', 'Etc/GMT+5'), ('America/Managua', 'America/Managua'), ('EST5EDT', 'EST5EDT'), ('America/Atikokan', 'America/Atikokan'), ('Asia/Baghdad', 'Asia/Baghdad'), ('Pacific/Marquesas', 'Pacific/Marquesas'), ('Etc/UCT', 'Etc/UCT'), ('Pacific/Tarawa', 'Pacific/Tarawa'), ('Australia/ACT', 'Australia/ACT'), ('Europe/Rome', 'Europe/Rome'), ('Canada/Atlantic', 'Canada/Atlantic'), ('Africa/Juba', 'Africa/Juba'), ('America/Ensenada', 'America/Ensenada'), ('Asia/Vientiane', 'Asia/Vientiane'), ('US/Aleutian', 'US/Aleutian'), ('America/La_Paz', 'America/La Paz'), ('Europe/London', 'Europe/London'), ('Europe/Budapest', 'Europe/Budapest'), ('Asia/Kabul', 'Asia/Kabul'), ('Etc/Zulu', 'Etc/Zulu'), ('Asia/Istanbul', 'Asia/Istanbul'), ('America/Havana', 'America/Havana'), ('Asia/Makassar', 'Asia/Makassar'), ('Africa/Khartoum', 'Africa/Khartoum'), ('Asia/Almaty', 'Asia/Almaty'), ('Europe/Copenhagen', 'Europe/Copenhagen'), ('Asia/Karachi', 'Asia/Karachi'), ('America/Boise', 'America/Boise'), ('Asia/Bahrain', 'Asia/Bahrain'), ('Indian/Maldives', 'Indian/Maldives'), ('Indian/Mayotte', 'Indian/Mayotte'), ('Africa/Mogadishu', 'Africa/Mogadishu'), ('Antarctica/South_Pole', 'Antarctica/South Pole'), ('Pacific/Fiji', 'Pacific/Fiji'), ('Africa/Ouagadougou', 'Africa/Ouagadougou'), ('Europe/Podgorica', 'Europe/Podgorica'), ('America/Argentina/La_Rioja', 'America/Argentina/La Rioja'), ('Canada/Mountain', 'Canada/Mountain'), ('Europe/Riga', 'Europe/Riga'), ('Europe/Vienna', 'Europe/Vienna'), ('America/Los_Angeles', 'America/Los Angeles'), ('Pacific/Majuro', 'Pacific/Majuro'), ('America/Cayman', 'America/Cayman'), ('America/Dawson', 'America/Dawson'), ('Australia/Lord_Howe', 'Australia/Lord Howe'), ('Europe/Gibraltar', 'Europe/Gibraltar'), ('Navajo', 'Navajo'), ('Canada/Pacific', 'Canada/Pacific'), ('Asia/Sakhalin', 'Asia/Sakhalin'), ('Asia/Choibalsan', 'Asia/Choibalsan'), ('WET', 'WET'), ('Europe/Monaco', 'Europe/Monaco'), ('Europe/Jersey', 'Europe/Jersey'), ('Antarctica/Troll', 'Antarctica/Troll'), ('Pacific/Wallis', 'Pacific/Wallis'), ('Europe/Madrid', 'Europe/Madrid'), ('Australia/Yancowinna', 'Australia/Yancowinna'), ('Europe/Busingen', 'Europe/Busingen'), ('America/Argentina/ComodRivadavia', 'America/Argentina/ComodRivadavia'), ('America/Iqaluit', 'America/Iqaluit'), ('America/Fort_Wayne', 'America/Fort Wayne'), ('Asia/Gaza', 'Asia/Gaza'), ('Atlantic/South_Georgia', 'Atlantic/South Georgia'), ('US/Central', 'US/Central'), ('America/Grand_Turk', 'America/Grand Turk'), ('Australia/LHI', 'Australia/LHI'), ('America/Indiana/Knox', 'America/Indiana/Knox'), ('Pacific/Wake', 'Pacific/Wake'), ('America/Toronto', 'America/Toronto'), ('America/Dominica', 'America/Dominica'), ('America/Anguilla', 'America/Anguilla'), ('America/Rainy_River', 'America/Rainy River'), ('America/Glace_Bay', 'America/Glace Bay'), ('Etc/Greenwich', 'Etc/Greenwich'), ('Africa/Tunis', 'Africa/Tunis'), ('Europe/Brussels', 'Europe/Brussels'), ('America/Indiana/Petersburg', 'America/Indiana/Petersburg'), ('Arctic/Longyearbyen', 'Arctic/Longyearbyen'), ('Asia/Baku', 'Asia/Baku'), ('Atlantic/Madeira', 'Atlantic/Madeira'), ('America/Coral_Harbour', 'America/Coral Harbour'), ('Asia/Kamchatka', 'Asia/Kamchatka'), ('Europe/Istanbul', 'Europe/Istanbul'), ('Pacific/Auckland', 'Pacific/Auckland'), ('America/Argentina/San_Juan', 'America/Argentina/San Juan'), ('Etc/GMT+4', 'Etc/GMT+4'), ('America/Tegucigalpa', 'America/Tegucigalpa'), ('Pacific/Kiritimati', 'Pacific/Kiritimati'), ('Etc/GMT-1', 'Etc/GMT-1'), ('Indian/Reunion', 'Indian/Reunion'), ('Australia/Tasmania', 'Australia/Tasmania'), ('Asia/Ulan_Bator', 'Asia/Ulan Bator'), ('Etc/GMT-8', 'Etc/GMT-8'), ('America/Grenada', 'America/Grenada'), ('Europe/Ljubljana', 'Europe/Ljubljana'), ('Atlantic/Faroe', 'Atlantic/Faroe'), ('Etc/GMT+0', 'Etc/GMT+0'), ('Africa/Bissau', 'Africa/Bissau'), ('America/Miquelon', 'America/Miquelon'), ('Asia/Amman', 'Asia/Amman'), ('Europe/Tiraspol', 'Europe/Tiraspol'), ('Etc/GMT+8', 'Etc/GMT+8'), ('Africa/Timbuktu', 'Africa/Timbuktu'), ('America/Belize', 'America/Belize'), ('America/St_Vincent', 'America/St Vincent'), ('Africa/Casablanca', 'Africa/Casablanca'), ('America/Jamaica', 'America/Jamaica'), ('America/Godthab', 'America/Godthab'), ('Africa/Maputo', 'Africa/Maputo'), ('Atlantic/Cape_Verde', 'Atlantic/Cape Verde'), ('Europe/Sofia', 'Europe/Sofia'), ('Europe/Kaliningrad', 'Europe/Kaliningrad'), ('America/Rankin_Inlet', 'America/Rankin Inlet'), ('Etc/GMT+9', 'Etc/GMT+9'), ('Europe/Berlin', 'Europe/Berlin'), ('Asia/Manila', 'Asia/Manila'), ('Asia/Kuching', 'Asia/Kuching'), ('Chile/EasterIsland', 'Chile/EasterIsland'), ('Pacific/Apia', 'Pacific/Apia'), ('Africa/Bangui', 'Africa/Bangui'), ('America/Argentina/Tucuman', 'America/Argentina/Tucuman'), ('Europe/Vaduz', 'Europe/Vaduz'), ('Europe/Mariehamn', 'Europe/Mariehamn'), ('Pacific/Rarotonga', 'Pacific/Rarotonga'), ('Africa/Abidjan', 'Africa/Abidjan'), ('Pacific/Gambier', 'Pacific/Gambier'), ('Asia/Qatar', 'Asia/Qatar'), ('Asia/Tel_Aviv', 'Asia/Tel Aviv'), ('America/Nome', 'America/Nome'), ('America/Kentucky/Louisville', 'America/Kentucky/Louisville'), ('America/Mexico_City', 'America/Mexico City'), ('Asia/Novosibirsk', 'Asia/Novosibirsk'), ('America/Noronha', 'America/Noronha'), ('America/Metlakatla', 'America/Metlakatla'), ('America/Matamoros', 'America/Matamoros'), ('America/Indianapolis', 'America/Indianapolis'), ('Etc/GMT0', 'Etc/GMT0'), ('Cuba', 'Cuba'), ('Portugal', 'Portugal'), ('Asia/Ujung_Pandang', 'Asia/Ujung Pandang'), ('Africa/Douala', 'Africa/Douala'), ('Asia/Omsk', 'Asia/Omsk'), ('Asia/Ust-Nera', 'Asia/Ust-Nera'), ('Africa/Sao_Tome', 'Africa/Sao Tome'), ('America/Kralendijk', 'America/Kralendijk'), ('Africa/Kampala', 'Africa/Kampala'), ('Etc/GMT', 'Etc/GMT'), ('Etc/GMT+10', 'Etc/GMT+10'), ('America/Goose_Bay', 'America/Goose Bay'), ('W-SU', 'W-SU'), ('Atlantic/Canary', 'Atlantic/Canary'), ('Pacific/Chatham', 'Pacific/Chatham'), ('America/Argentina/Salta', 'America/Argentina/Salta'), ('Africa/Kigali', 'Africa/Kigali'), ('Europe/Volgograd', 'Europe/Volgograd'), ('Pacific/Galapagos', 'Pacific/Galapagos'), ('America/Cuiaba', 'America/Cuiaba'), ('Africa/Asmara', 'Africa/Asmara'), ('America/Panama', 'America/Panama'), ('Africa/Accra', 'Africa/Accra'), ('America/Costa_Rica', 'America/Costa Rica'), ('Pacific/Tahiti', 'Pacific/Tahiti'), ('Asia/Famagusta', 'Asia/Famagusta'), ('US/Pacific', 'US/Pacific'), ('Africa/Luanda', 'Africa/Luanda'), ('Europe/Malta', 'Europe/Malta'), ('America/Indiana/Vevay', 'America/Indiana/Vevay'), ('Etc/GMT-12', 'Etc/GMT-12'), ('America/Cordoba', 'America/Cordoba'), ('Africa/Porto-Novo', 'Africa/Porto-Novo'), ('Asia/Brunei', 'Asia/Brunei'), ('EET', 'EET'), ('Asia/Shanghai', 'Asia/Shanghai'), ('Asia/Atyrau', 'Asia/Atyrau'), ('Etc/GMT-4', 'Etc/GMT-4'), ('Antarctica/McMurdo', 'Antarctica/McMurdo'), ('America/North_Dakota/Center', 'America/North Dakota/Center'), ('America/Thunder_Bay', 'America/Thunder Bay'), ('America/Denver', 'America/Denver'), ('America/Kentucky/Monticello', 'America/Kentucky/Monticello'), ('Australia/Perth', 'Australia/Perth'), ('America/Edmonton', 'America/Edmonton'), ('Africa/Lagos', 'Africa/Lagos'), ('Africa/Addis_Ababa', 'Africa/Addis Ababa'), ('Africa/Ceuta', 'Africa/Ceuta'), ('GMT0', 'GMT0'), ('Asia/Chongqing', 'Asia/Chongqing'), ('America/Recife', 'America/Recife'), ('Europe/Simferopol', 'Europe/Simferopol'), ('America/New_York', 'America/New York'), ('Singapore', 'Singapore'), ('Africa/Maseru', 'Africa/Maseru'), ('America/Indiana/Marengo', 'America/Indiana/Marengo'), ('Pacific/Fakaofo', 'Pacific/Fakaofo'), ('US/Michigan', 'US/Michigan'), ('Pacific/Kanton', 'Pacific/Kanton'), ('Europe/Oslo', 'Europe/Oslo'), ('MET', 'MET'), ('America/Nuuk', 'America/Nuuk'), ('America/Resolute', 'America/Resolute'), ('America/Argentina/San_Luis', 'America/Argentina/San Luis'), ('Asia/Saigon', 'Asia/Saigon'), ('CET', 'CET'), ('Asia/Yakutsk', 'Asia/Yakutsk'), ('Antarctica/DumontDUrville', 'Antarctica/DumontDUrville'), ('America/Winnipeg', 'America/Winnipeg'), ('Australia/West', 'Australia/West'), ('America/North_Dakota/Beulah', 'America/North Dakota/Beulah'), ('Asia/Anadyr', 'Asia/Anadyr'), ('America/Curacao', 'America/Curacao'), ('US/Mountain', 'US/Mountain'), ('America/Porto_Acre', 'America/Porto Acre'), ('Pacific/Niue', 'Pacific/Niue'), ('Antarctica/Davis', 'Antarctica/Davis'), ('Asia/Damascus', 'Asia/Damascus'), ('Pacific/Bougainville', 'Pacific/Bougainville'), ('Asia/Srednekolymsk', 'Asia/Srednekolymsk'), ('Asia/Seoul', 'Asia/Seoul'), ('Asia/Tehran', 'Asia/Tehran'), ('America/Indiana/Tell_City', 'America/Indiana/Tell City'), ('Pacific/Midway', 'Pacific/Midway'), ('Atlantic/Bermuda', 'Atlantic/Bermuda'), ('CST6CDT', 'CST6CDT'), ('America/Porto_Velho', 'America/Porto Velho'), ('US/Arizona', 'US/Arizona'), ('Europe/Chisinau', 'Europe/Chisinau'), ('US/Samoa', 'US/Samoa'), ('America/Antigua', 'America/Antigua'), ('Africa/Djibouti', 'Africa/Djibouti'), ('America/Chicago', 'America/Chicago'), ('Pacific/Kwajalein', 'Pacific/Kwajalein'), ('Asia/Ulaanbaatar', 'Asia/Ulaanbaatar'), ('Europe/Saratov', 'Europe/Saratov'), ('Australia/Hobart', 'Australia/Hobart'), ('America/Blanc-Sablon', 'America/Blanc-Sablon'), ('America/Menominee', 'America/Menominee'), ('Australia/Currie', 'Australia/Currie'), ('America/Cambridge_Bay', 'America/Cambridge Bay'), ('America/Santiago', 'America/Santiago'), ('Brazil/West', 'Brazil/West'), ('America/Swift_Current', 'America/Swift Current'), ('Atlantic/Reykjavik', 'Atlantic/Reykjavik'), ('America/Virgin', 'America/Virgin'), ('America/Sao_Paulo', 'America/Sao Paulo'), ('America/Rio_Branco', 'America/Rio Branco'), ('Canada/Yukon', 'Canada/Yukon'), ('Asia/Bishkek', 'Asia/Bishkek'), ('America/Bahia_Banderas', 'America/Bahia Banderas'), ('America/Monterrey', 'America/Monterrey'), ('Pacific/Port_Moresby', 'Pacific/Port Moresby'), ('America/Guayaquil', 'America/Guayaquil'), ('Asia/Taipei', 'Asia/Taipei'), ('MST7MDT', 'MST7MDT'), ('GMT-0', 'GMT-0'), ('Indian/Cocos', 'Indian/Cocos'), ('Africa/Kinshasa', 'Africa/Kinshasa'), ('Atlantic/Jan_Mayen', 'Atlantic/Jan Mayen'), ('Pacific/Norfolk', 'Pacific/Norfolk'), ('America/Fort_Nelson', 'America/Fort Nelson'), ('America/Argentina/Jujuy', 'America/Argentina/Jujuy'), ('America/Indiana/Winamac', 'America/Indiana/Winamac'), ('Australia/Adelaide', 'Australia/Adelaide'), ('Asia/Chita', 'Asia/Chita'), ('Indian/Chagos', 'Indian/Chagos'), ('Etc/GMT+12', 'Etc/GMT+12'), ('Africa/Algiers', 'Africa/Algiers'), ('US/Hawaii', 'US/Hawaii'), ('America/Whitehorse', 'America/Whitehorse'), ('Pacific/Funafuti', 'Pacific/Funafuti'), ('Pacific/Noumea', 'Pacific/Noumea'), ('Etc/GMT-6', 'Etc/GMT-6'), ('Pacific/Johnston', 'Pacific/Johnston'), ('Greenwich', 'Greenwich'), ('America/St_Kitts', 'America/St Kitts'), ('Africa/Asmera', 'Africa/Asmera'), ('Pacific/Nauru', 'Pacific/Nauru'), ('Asia/Thimbu', 'Asia/Thimbu'), ('Antarctica/Casey', 'Antarctica/Casey'), ('America/Hermosillo', 'America/Hermosillo'), ('Asia/Ashgabat', 'Asia/Ashgabat'), ('Mexico/BajaSur', 'Mexico/BajaSur'), ('Europe/Nicosia', 'Europe/Nicosia'), ('Indian/Comoro', 'Indian/Comoro'), ('America/Belem', 'America/Belem'), ('Europe/Moscow', 'Europe/Moscow'), ('Asia/Bangkok', 'Asia/Bangkok'), ('Israel', 'Israel'), ('NZ-CHAT', 'NZ-CHAT'), ('US/Eastern', 'US/Eastern'), ('Europe/Kyiv', 'Europe/Kyiv'), ('Canada/Saskatchewan', 'Canada/Saskatchewan'), ('Asia/Jakarta', 'Asia/Jakarta'), ('PRC', 'PRC'), ('America/Knox_IN', 'America/Knox IN'), ('America/Punta_Arenas', 'America/Punta Arenas'), ('Africa/Conakry', 'Africa/Conakry'), ('Europe/Paris', 'Europe/Paris'), ('Africa/Tripoli', 'Africa/Tripoli'), ('Asia/Riyadh', 'Asia/Riyadh'), ('America/Lima', 'America/Lima'), ('America/Guadeloupe', 'America/Guadeloupe'), ('America/Shiprock', 'America/Shiprock'), ('Etc/UTC', 'Etc/UTC'), ('America/Aruba', 'America/Aruba'), ('Asia/Magadan', 'Asia/Magadan'), ('America/Araguaina', 'America/Araguaina'), ('America/Eirunepe', 'America/Eirunepe'), ('America/Marigot', 'America/Marigot'), ('Australia/Darwin', 'Australia/Darwin'), ('Brazil/Acre', 'Brazil/Acre'), ('Asia/Irkutsk', 'Asia/Irkutsk'), ('America/Caracas', 'America/Caracas'), ('Europe/Uzhgorod', 'Europe/Uzhgorod'), ('America/Inuvik', 'America/Inuvik'), ('Europe/Helsinki', 'Europe/Helsinki'), ('Europe/Tirane', 'Europe/Tirane'), ('Europe/Belgrade', 'Europe/Belgrade'), ('America/Montreal', 'America/Montreal'), ('MST', 'MST'), ('America/Bogota', 'America/Bogota'), ('EST', 'EST'), ('Australia/Eucla', 'Australia/Eucla'), ('America/Rosario', 'America/Rosario'), ('Africa/Windhoek', 'Africa/Windhoek'), ('Canada/Newfoundland', 'Canada/Newfoundland'), ('Asia/Novokuznetsk', 'Asia/Novokuznetsk'), ('Asia/Aqtobe', 'Asia/Aqtobe'), ('Australia/Lindeman', 'Australia/Lindeman'), ('Europe/Isle_of_Man', 'Europe/Isle of Man'), ('America/El_Salvador', 'America/El Salvador'), ('America/Cancun', 'America/Cancun'), ('America/Ciudad_Juarez', 'America/Ciudad Juarez'), ('America/Chihuahua', 'America/Chihuahua'), ('Etc/GMT+7', 'Etc/GMT+7'), ('Europe/Bucharest', 'Europe/Bucharest'), ('America/Guatemala', 'America/Guatemala'), ('Europe/Vilnius', 'Europe/Vilnius'), ('Europe/Dublin', 'Europe/Dublin')], default='America/Edmonton', max_length=100)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
            },
        ),
        migrations.CreateModel(
            name='Studio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=120, verbose_name='Studio Name')),
                ('email', models.CharField(blank=True, max_length=124, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=24, null=True, verbose_name='Phone')),
                ('bio', models.TextField(blank=True, null=True)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to=core.models.common.get_path_for_uploaded_profile, verbose_name='Profile photo')),
                ('address', models.CharField(blank=True, max_length=150, null=True)),
                ('city', models.CharField(blank=True, max_length=150, null=True)),
                ('province', models.CharField(blank=True, max_length=150, null=True)),
                ('country', models.CharField(blank=True, max_length=150, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=50, null=True)),
                ('website', models.URLField(blank=True, max_length=150, null=True)),
                ('facebook', models.CharField(blank=True, max_length=150, null=True)),
                ('instagram', models.CharField(blank=True, max_length=150, null=True)),
                ('twitter', models.CharField(blank=True, max_length=150, null=True)),
                ('tiktok', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tik Tok')),
                ('youtube', models.CharField(blank=True, max_length=150, null=True)),
                ('admins', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Admin Users')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('dislikes', models.ManyToManyField(blank=True, related_name='studios_disliked', to=settings.AUTH_USER_MODEL)),
                ('files', models.ManyToManyField(blank=True, related_name='studio_files', to='core.attachment')),
                ('followers', models.ManyToManyField(blank=True, related_name='studios_followed', to=settings.AUTH_USER_MODEL)),
                ('genres', models.ManyToManyField(blank=True, to='core.genre')),
                ('likes', models.ManyToManyField(blank=True, related_name='studios_liked', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Studio',
                'verbose_name_plural': 'Studios',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('dancer', 'Dancer'), ('creator', 'Creator'), ('studio', 'Studio'), ('stud_admin', 'Studio Administrator'), ('sys_admin', 'System Administrator')], default='dancer', max_length=10)),
                ('cover_photo', models.ImageField(blank=True, null=True, upload_to=core.models.common.get_path_for_uploaded_profile, verbose_name='Cover photo')),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to=core.models.common.get_path_for_uploaded_profile, verbose_name='Profile photo')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=core.models.common.get_path_for_uploaded_profile, verbose_name='Avatar')),
                ('resume', models.FileField(blank=True, null=True, upload_to=core.models.common.get_path_for_uploaded_profile, verbose_name='Resume')),
                ('active', models.BooleanField(default=True, verbose_name='Is profile active?')),
                ('bio', models.TextField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('alt_name', models.CharField(blank=True, max_length=50, null=True)),
                ('full_name', models.CharField(blank=True, max_length=128, null=True)),
                ('display_name', models.CharField(blank=True, max_length=128, null=True)),
                ('phone', models.CharField(blank=True, max_length=24, null=True, verbose_name='Phone')),
                ('organization', models.CharField(blank=True, max_length=100, null=True)),
                ('alt_phone', models.CharField(blank=True, max_length=24, null=True, verbose_name='Alternate Phone')),
                ('timezone', models.CharField(blank=True, choices=[('Asia/Krasnoyarsk', 'Asia/Krasnoyarsk'), ('America/Atka', 'America/Atka'), ('America/Montevideo', 'America/Montevideo'), ('America/Adak', 'America/Adak'), ('Asia/Dacca', 'Asia/Dacca'), ('Asia/Harbin', 'Asia/Harbin'), ('Etc/GMT-13', 'Etc/GMT-13'), ('Asia/Kuwait', 'Asia/Kuwait'), ('Asia/Yangon', 'Asia/Yangon'), ('Brazil/DeNoronha', 'Brazil/DeNoronha'), ('Indian/Mahe', 'Indian/Mahe'), ('Antarctica/Palmer', 'Antarctica/Palmer'), ('Asia/Hovd', 'Asia/Hovd'), ('Asia/Dhaka', 'Asia/Dhaka'), ('America/Tortola', 'America/Tortola'), ('Indian/Christmas', 'Indian/Christmas'), ('America/Vancouver', 'America/Vancouver'), ('Antarctica/Syowa', 'Antarctica/Syowa'), ('Asia/Dubai', 'Asia/Dubai'), ('America/Paramaribo', 'America/Paramaribo'), ('Asia/Calcutta', 'Asia/Calcutta'), ('Europe/Guernsey', 'Europe/Guernsey'), ('Australia/Brisbane', 'Australia/Brisbane'), ('Antarctica/Vostok', 'Antarctica/Vostok'), ('America/Scoresbysund', 'America/Scoresbysund'), ('ROC', 'ROC'), ('Asia/Dushanbe', 'Asia/Dushanbe'), ('Pacific/Truk', 'Pacific/Truk'), ('Australia/Melbourne', 'Australia/Melbourne'), ('America/Louisville', 'America/Louisville'), ('Asia/Kathmandu', 'Asia/Kathmandu'), ('HST', 'HST'), ('America/St_Johns', 'America/St Johns'), ('America/Danmarkshavn', 'America/Danmarkshavn'), ('Africa/Cairo', 'Africa/Cairo'), ('Africa/Dar_es_Salaam', 'Africa/Dar es Salaam'), ('Etc/GMT-5', 'Etc/GMT-5'), ('America/Argentina/Catamarca', 'America/Argentina/Catamarca'), ('Atlantic/St_Helena', 'Atlantic/St Helena'), ('America/St_Barthelemy', 'America/St Barthelemy'), ('Etc/GMT+1', 'Etc/GMT+1'), ('America/Yellowknife', 'America/Yellowknife'), ('Etc/GMT+2', 'Etc/GMT+2'), ('Pacific/Samoa', 'Pacific/Samoa'), ('America/Yakutat', 'America/Yakutat'), ('Poland', 'Poland'), ('Etc/GMT-0', 'Etc/GMT-0'), ('Africa/Nairobi', 'Africa/Nairobi'), ('Asia/Samarkand', 'Asia/Samarkand'), ('Pacific/Pago_Pago', 'Pacific/Pago Pago'), ('Etc/GMT-14', 'Etc/GMT-14'), ('Asia/Macao', 'Asia/Macao'), ('Europe/Athens', 'Europe/Athens'), ('America/Bahia', 'America/Bahia'), ('Pacific/Ponape', 'Pacific/Ponape'), ('America/Martinique', 'America/Martinique'), ('America/Jujuy', 'America/Jujuy'), ('Etc/GMT-10', 'Etc/GMT-10'), ('Africa/Nouakchott', 'Africa/Nouakchott'), ('Europe/Zurich', 'Europe/Zurich'), ('Pacific/Chuuk', 'Pacific/Chuuk'), ('Asia/Beirut', 'Asia/Beirut'), ('Europe/Warsaw', 'Europe/Warsaw'), ('Australia/Broken_Hill', 'Australia/Broken Hill'), ('America/Argentina/Rio_Gallegos', 'America/Argentina/Rio Gallegos'), ('Asia/Aden', 'Asia/Aden'), ('America/Manaus', 'America/Manaus'), ('Antarctica/Mawson', 'Antarctica/Mawson'), ('Europe/Kiev', 'Europe/Kiev'), ('Turkey', 'Turkey'), ('Asia/Qyzylorda', 'Asia/Qyzylorda'), ('Etc/GMT+6', 'Etc/GMT+6'), ('Indian/Antananarivo', 'Indian/Antananarivo'), ('America/Maceio', 'America/Maceio'), ('America/Moncton', 'America/Moncton'), ('Australia/NSW', 'Australia/NSW'), ('Asia/Katmandu', 'Asia/Katmandu'), ('America/Santo_Domingo', 'America/Santo Domingo'), ('Asia/Ho_Chi_Minh', 'Asia/Ho Chi Minh'), ('America/Guyana', 'America/Guyana'), ('Asia/Urumqi', 'Asia/Urumqi'), ('Etc/GMT-9', 'Etc/GMT-9'), ('Zulu', 'Zulu'), ('Asia/Chungking', 'Asia/Chungking'), ('Africa/Bujumbura', 'Africa/Bujumbura'), ('America/Port_of_Spain', 'America/Port of Spain'), ('Pacific/Saipan', 'Pacific/Saipan'), ('America/Mazatlan', 'America/Mazatlan'), ('NZ', 'NZ'), ('Africa/El_Aaiun', 'Africa/El Aaiun'), ('UCT', 'UCT'), ('Factory', 'Factory'), ('America/Santa_Isabel', 'America/Santa Isabel'), ('Antarctica/Macquarie', 'Antarctica/Macquarie'), ('Asia/Barnaul', 'Asia/Barnaul'), ('America/Phoenix', 'America/Phoenix'), ('America/Boa_Vista', 'America/Boa Vista'), ('GMT+0', 'GMT+0'), ('Etc/GMT-2', 'Etc/GMT-2'), ('America/Thule', 'America/Thule'), ('Asia/Macau', 'Asia/Macau'), ('America/St_Lucia', 'America/St Lucia'), ('Europe/Sarajevo', 'Europe/Sarajevo'), ('Africa/Johannesburg', 'Africa/Johannesburg'), ('America/Creston', 'America/Creston'), ('Asia/Phnom_Penh', 'Asia/Phnom Penh'), ('Asia/Dili', 'Asia/Dili'), ('Pacific/Kosrae', 'Pacific/Kosrae'), ('America/Sitka', 'America/Sitka'), ('America/Port-au-Prince', 'America/Port-au-Prince'), ('Africa/Lome', 'Africa/Lome'), ('Asia/Kashgar', 'Asia/Kashgar'), ('Australia/Canberra', 'Australia/Canberra'), ('Australia/Sydney', 'Australia/Sydney'), ('Asia/Qostanay', 'Asia/Qostanay'), ('Atlantic/Stanley', 'Atlantic/Stanley'), ('Etc/GMT+11', 'Etc/GMT+11'), ('Iceland', 'Iceland'), ('Africa/Harare', 'Africa/Harare'), ('America/Detroit', 'America/Detroit'), ('Asia/Tokyo', 'Asia/Tokyo'), ('Etc/GMT-7', 'Etc/GMT-7'), ('Pacific/Enderbury', 'Pacific/Enderbury'), ('Brazil/East', 'Brazil/East'), ('Canada/Central', 'Canada/Central'), ('Europe/Prague', 'Europe/Prague'), ('GB', 'GB'), ('US/Alaska', 'US/Alaska'), ('Asia/Nicosia', 'Asia/Nicosia'), ('Asia/Jerusalem', 'Asia/Jerusalem'), ('Europe/Zaporozhye', 'Europe/Zaporozhye'), ('Etc/Universal', 'Etc/Universal'), ('Pacific/Pitcairn', 'Pacific/Pitcairn'), ('America/Catamarca', 'America/Catamarca'), ('Chile/Continental', 'Chile/Continental'), ('Australia/Victoria', 'Australia/Victoria'), ('America/Merida', 'America/Merida'), ('Egypt', 'Egypt'), ('GMT', 'GMT'), ('Asia/Hong_Kong', 'Asia/Hong Kong'), ('America/Ojinaga', 'America/Ojinaga'), ('America/Puerto_Rico', 'America/Puerto Rico'), ('America/Barbados', 'America/Barbados'), ('Europe/Amsterdam', 'Europe/Amsterdam'), ('Hongkong', 'Hongkong'), ('Atlantic/Azores', 'Atlantic/Azores'), ('Iran', 'Iran'), ('Africa/Malabo', 'Africa/Malabo'), ('America/Argentina/Ushuaia', 'America/Argentina/Ushuaia'), ('Africa/Brazzaville', 'Africa/Brazzaville'), ('Europe/Tallinn', 'Europe/Tallinn'), ('America/Anchorage', 'America/Anchorage'), ('Asia/Singapore', 'Asia/Singapore'), ('America/Nipigon', 'America/Nipigon'), ('America/Campo_Grande', 'America/Campo Grande'), ('Europe/Astrakhan', 'Europe/Astrakhan'), ('Africa/Monrovia', 'Africa/Monrovia'), ('Asia/Pontianak', 'Asia/Pontianak'), ('Kwajalein', 'Kwajalein'), ('US/East-Indiana', 'US/East-Indiana'), ('America/Juneau', 'America/Juneau'), ('Etc/GMT+3', 'Etc/GMT+3'), ('Asia/Colombo', 'Asia/Colombo'), ('America/Asuncion', 'America/Asuncion'), ('Asia/Yerevan', 'Asia/Yerevan'), ('Africa/Freetown', 'Africa/Freetown'), ('Europe/Bratislava', 'Europe/Bratislava'), ('America/Buenos_Aires', 'America/Buenos Aires'), ('Pacific/Pohnpei', 'Pacific/Pohnpei'), ('Australia/South', 'Australia/South'), ('Etc/GMT-11', 'Etc/GMT-11'), ('Africa/Blantyre', 'Africa/Blantyre'), ('America/Nassau', 'America/Nassau'), ('Asia/Muscat', 'Asia/Muscat'), ('America/Regina', 'America/Regina'), ('Africa/Banjul', 'Africa/Banjul'), ('Jamaica', 'Jamaica'), ('Asia/Rangoon', 'Asia/Rangoon'), ('Europe/Belfast', 'Europe/Belfast'), ('Africa/Ndjamena', 'Africa/Ndjamena'), ('America/Indiana/Indianapolis', 'America/Indiana/Indianapolis'), ('Europe/Vatican', 'Europe/Vatican'), ('Europe/Zagreb', 'Europe/Zagreb'), ('Mexico/General', 'Mexico/General'), ('Africa/Mbabane', 'Africa/Mbabane'), ('Asia/Jayapura', 'Asia/Jayapura'), ('Europe/San_Marino', 'Europe/San Marino'), ('Europe/Skopje', 'Europe/Skopje'), ('America/Santarem', 'America/Santarem'), ('Pacific/Palau', 'Pacific/Palau'), ('America/Mendoza', 'America/Mendoza'), ('Europe/Kirov', 'Europe/Kirov'), ('Australia/Queensland', 'Australia/Queensland'), ('Europe/Samara', 'Europe/Samara'), ('Europe/Lisbon', 'Europe/Lisbon'), ('Mexico/BajaNorte', 'Mexico/BajaNorte'), ('Africa/Gaborone', 'Africa/Gaborone'), ('Pacific/Tongatapu', 'Pacific/Tongatapu'), ('America/Pangnirtung', 'America/Pangnirtung'), ('Europe/Stockholm', 'Europe/Stockholm'), ('Europe/Ulyanovsk', 'Europe/Ulyanovsk'), ('Pacific/Guam', 'Pacific/Guam'), ('Indian/Mauritius', 'Indian/Mauritius'), ('Europe/Andorra', 'Europe/Andorra'), ('America/Indiana/Vincennes', 'America/Indiana/Vincennes'), ('America/Halifax', 'America/Halifax'), ('Africa/Lubumbashi', 'Africa/Lubumbashi'), ('Antarctica/Rothera', 'Antarctica/Rothera'), ('Africa/Niamey', 'Africa/Niamey'), ('Europe/Minsk', 'Europe/Minsk'), ('Asia/Tashkent', 'Asia/Tashkent'), ('America/Tijuana', 'America/Tijuana'), ('Asia/Pyongyang', 'Asia/Pyongyang'), ('Asia/Khandyga', 'Asia/Khandyga'), ('US/Indiana-Starke', 'US/Indiana-Starke'), ('Japan', 'Japan'), ('Europe/Luxembourg', 'Europe/Luxembourg'), ('America/Dawson_Creek', 'America/Dawson Creek'), ('Australia/North', 'Australia/North'), ('PST8PDT', 'PST8PDT'), ('Libya', 'Libya'), ('Pacific/Guadalcanal', 'Pacific/Guadalcanal'), ('Asia/Thimphu', 'Asia/Thimphu'), ('Indian/Kerguelen', 'Indian/Kerguelen'), ('Pacific/Efate', 'Pacific/Efate'), ('Atlantic/Faeroe', 'Atlantic/Faeroe'), ('America/Montserrat', 'America/Montserrat'), ('Africa/Bamako', 'Africa/Bamako'), ('America/Argentina/Cordoba', 'America/Argentina/Cordoba'), ('UTC', 'UTC'), ('Asia/Vladivostok', 'Asia/Vladivostok'), ('Asia/Aqtau', 'Asia/Aqtau'), ('America/Lower_Princes', 'America/Lower Princes'), ('Eire', 'Eire'), ('Canada/Eastern', 'Canada/Eastern'), ('Asia/Kuala_Lumpur', 'Asia/Kuala Lumpur'), ('Asia/Ashkhabad', 'Asia/Ashkhabad'), ('Etc/GMT-3', 'Etc/GMT-3'), ('Asia/Yekaterinburg', 'Asia/Yekaterinburg'), ('America/Argentina/Buenos_Aires', 'America/Argentina/Buenos Aires'), ('America/Fortaleza', 'America/Fortaleza'), ('Africa/Libreville', 'Africa/Libreville'), ('GB-Eire', 'GB-Eire'), ('Universal', 'Universal'), ('America/Argentina/Mendoza', 'America/Argentina/Mendoza'), ('Africa/Lusaka', 'Africa/Lusaka'), ('America/St_Thomas', 'America/St Thomas'), ('Asia/Tbilisi', 'Asia/Tbilisi'), ('America/North_Dakota/New_Salem', 'America/North Dakota/New Salem'), ('ROK', 'ROK'), ('Asia/Tomsk', 'Asia/Tomsk'), ('Asia/Hebron', 'Asia/Hebron'), ('America/Cayenne', 'America/Cayenne'), ('Asia/Kolkata', 'Asia/Kolkata'), ('Pacific/Easter', 'Pacific/Easter'), ('Africa/Dakar', 'Africa/Dakar'), ('Asia/Oral', 'Asia/Oral'), ('Pacific/Honolulu', 'Pacific/Honolulu'), ('Pacific/Yap', 'Pacific/Yap'), ('Etc/GMT+5', 'Etc/GMT+5'), ('America/Managua', 'America/Managua'), ('EST5EDT', 'EST5EDT'), ('America/Atikokan', 'America/Atikokan'), ('Asia/Baghdad', 'Asia/Baghdad'), ('Pacific/Marquesas', 'Pacific/Marquesas'), ('Etc/UCT', 'Etc/UCT'), ('Pacific/Tarawa', 'Pacific/Tarawa'), ('Australia/ACT', 'Australia/ACT'), ('Europe/Rome', 'Europe/Rome'), ('Canada/Atlantic', 'Canada/Atlantic'), ('Africa/Juba', 'Africa/Juba'), ('America/Ensenada', 'America/Ensenada'), ('Asia/Vientiane', 'Asia/Vientiane'), ('US/Aleutian', 'US/Aleutian'), ('America/La_Paz', 'America/La Paz'), ('Europe/London', 'Europe/London'), ('Europe/Budapest', 'Europe/Budapest'), ('Asia/Kabul', 'Asia/Kabul'), ('Etc/Zulu', 'Etc/Zulu'), ('Asia/Istanbul', 'Asia/Istanbul'), ('America/Havana', 'America/Havana'), ('Asia/Makassar', 'Asia/Makassar'), ('Africa/Khartoum', 'Africa/Khartoum'), ('Asia/Almaty', 'Asia/Almaty'), ('Europe/Copenhagen', 'Europe/Copenhagen'), ('Asia/Karachi', 'Asia/Karachi'), ('America/Boise', 'America/Boise'), ('Asia/Bahrain', 'Asia/Bahrain'), ('Indian/Maldives', 'Indian/Maldives'), ('Indian/Mayotte', 'Indian/Mayotte'), ('Africa/Mogadishu', 'Africa/Mogadishu'), ('Antarctica/South_Pole', 'Antarctica/South Pole'), ('Pacific/Fiji', 'Pacific/Fiji'), ('Africa/Ouagadougou', 'Africa/Ouagadougou'), ('Europe/Podgorica', 'Europe/Podgorica'), ('America/Argentina/La_Rioja', 'America/Argentina/La Rioja'), ('Canada/Mountain', 'Canada/Mountain'), ('Europe/Riga', 'Europe/Riga'), ('Europe/Vienna', 'Europe/Vienna'), ('America/Los_Angeles', 'America/Los Angeles'), ('Pacific/Majuro', 'Pacific/Majuro'), ('America/Cayman', 'America/Cayman'), ('America/Dawson', 'America/Dawson'), ('Australia/Lord_Howe', 'Australia/Lord Howe'), ('Europe/Gibraltar', 'Europe/Gibraltar'), ('Navajo', 'Navajo'), ('Canada/Pacific', 'Canada/Pacific'), ('Asia/Sakhalin', 'Asia/Sakhalin'), ('Asia/Choibalsan', 'Asia/Choibalsan'), ('WET', 'WET'), ('Europe/Monaco', 'Europe/Monaco'), ('Europe/Jersey', 'Europe/Jersey'), ('Antarctica/Troll', 'Antarctica/Troll'), ('Pacific/Wallis', 'Pacific/Wallis'), ('Europe/Madrid', 'Europe/Madrid'), ('Australia/Yancowinna', 'Australia/Yancowinna'), ('Europe/Busingen', 'Europe/Busingen'), ('America/Argentina/ComodRivadavia', 'America/Argentina/ComodRivadavia'), ('America/Iqaluit', 'America/Iqaluit'), ('America/Fort_Wayne', 'America/Fort Wayne'), ('Asia/Gaza', 'Asia/Gaza'), ('Atlantic/South_Georgia', 'Atlantic/South Georgia'), ('US/Central', 'US/Central'), ('America/Grand_Turk', 'America/Grand Turk'), ('Australia/LHI', 'Australia/LHI'), ('America/Indiana/Knox', 'America/Indiana/Knox'), ('Pacific/Wake', 'Pacific/Wake'), ('America/Toronto', 'America/Toronto'), ('America/Dominica', 'America/Dominica'), ('America/Anguilla', 'America/Anguilla'), ('America/Rainy_River', 'America/Rainy River'), ('America/Glace_Bay', 'America/Glace Bay'), ('Etc/Greenwich', 'Etc/Greenwich'), ('Africa/Tunis', 'Africa/Tunis'), ('Europe/Brussels', 'Europe/Brussels'), ('America/Indiana/Petersburg', 'America/Indiana/Petersburg'), ('Arctic/Longyearbyen', 'Arctic/Longyearbyen'), ('Asia/Baku', 'Asia/Baku'), ('Atlantic/Madeira', 'Atlantic/Madeira'), ('America/Coral_Harbour', 'America/Coral Harbour'), ('Asia/Kamchatka', 'Asia/Kamchatka'), ('Europe/Istanbul', 'Europe/Istanbul'), ('Pacific/Auckland', 'Pacific/Auckland'), ('America/Argentina/San_Juan', 'America/Argentina/San Juan'), ('Etc/GMT+4', 'Etc/GMT+4'), ('America/Tegucigalpa', 'America/Tegucigalpa'), ('Pacific/Kiritimati', 'Pacific/Kiritimati'), ('Etc/GMT-1', 'Etc/GMT-1'), ('Indian/Reunion', 'Indian/Reunion'), ('Australia/Tasmania', 'Australia/Tasmania'), ('Asia/Ulan_Bator', 'Asia/Ulan Bator'), ('Etc/GMT-8', 'Etc/GMT-8'), ('America/Grenada', 'America/Grenada'), ('Europe/Ljubljana', 'Europe/Ljubljana'), ('Atlantic/Faroe', 'Atlantic/Faroe'), ('Etc/GMT+0', 'Etc/GMT+0'), ('Africa/Bissau', 'Africa/Bissau'), ('America/Miquelon', 'America/Miquelon'), ('Asia/Amman', 'Asia/Amman'), ('Europe/Tiraspol', 'Europe/Tiraspol'), ('Etc/GMT+8', 'Etc/GMT+8'), ('Africa/Timbuktu', 'Africa/Timbuktu'), ('America/Belize', 'America/Belize'), ('America/St_Vincent', 'America/St Vincent'), ('Africa/Casablanca', 'Africa/Casablanca'), ('America/Jamaica', 'America/Jamaica'), ('America/Godthab', 'America/Godthab'), ('Africa/Maputo', 'Africa/Maputo'), ('Atlantic/Cape_Verde', 'Atlantic/Cape Verde'), ('Europe/Sofia', 'Europe/Sofia'), ('Europe/Kaliningrad', 'Europe/Kaliningrad'), ('America/Rankin_Inlet', 'America/Rankin Inlet'), ('Etc/GMT+9', 'Etc/GMT+9'), ('Europe/Berlin', 'Europe/Berlin'), ('Asia/Manila', 'Asia/Manila'), ('Asia/Kuching', 'Asia/Kuching'), ('Chile/EasterIsland', 'Chile/EasterIsland'), ('Pacific/Apia', 'Pacific/Apia'), ('Africa/Bangui', 'Africa/Bangui'), ('America/Argentina/Tucuman', 'America/Argentina/Tucuman'), ('Europe/Vaduz', 'Europe/Vaduz'), ('Europe/Mariehamn', 'Europe/Mariehamn'), ('Pacific/Rarotonga', 'Pacific/Rarotonga'), ('Africa/Abidjan', 'Africa/Abidjan'), ('Pacific/Gambier', 'Pacific/Gambier'), ('Asia/Qatar', 'Asia/Qatar'), ('Asia/Tel_Aviv', 'Asia/Tel Aviv'), ('America/Nome', 'America/Nome'), ('America/Kentucky/Louisville', 'America/Kentucky/Louisville'), ('America/Mexico_City', 'America/Mexico City'), ('Asia/Novosibirsk', 'Asia/Novosibirsk'), ('America/Noronha', 'America/Noronha'), ('America/Metlakatla', 'America/Metlakatla'), ('America/Matamoros', 'America/Matamoros'), ('America/Indianapolis', 'America/Indianapolis'), ('Etc/GMT0', 'Etc/GMT0'), ('Cuba', 'Cuba'), ('Portugal', 'Portugal'), ('Asia/Ujung_Pandang', 'Asia/Ujung Pandang'), ('Africa/Douala', 'Africa/Douala'), ('Asia/Omsk', 'Asia/Omsk'), ('Asia/Ust-Nera', 'Asia/Ust-Nera'), ('Africa/Sao_Tome', 'Africa/Sao Tome'), ('America/Kralendijk', 'America/Kralendijk'), ('Africa/Kampala', 'Africa/Kampala'), ('Etc/GMT', 'Etc/GMT'), ('Etc/GMT+10', 'Etc/GMT+10'), ('America/Goose_Bay', 'America/Goose Bay'), ('W-SU', 'W-SU'), ('Atlantic/Canary', 'Atlantic/Canary'), ('Pacific/Chatham', 'Pacific/Chatham'), ('America/Argentina/Salta', 'America/Argentina/Salta'), ('Africa/Kigali', 'Africa/Kigali'), ('Europe/Volgograd', 'Europe/Volgograd'), ('Pacific/Galapagos', 'Pacific/Galapagos'), ('America/Cuiaba', 'America/Cuiaba'), ('Africa/Asmara', 'Africa/Asmara'), ('America/Panama', 'America/Panama'), ('Africa/Accra', 'Africa/Accra'), ('America/Costa_Rica', 'America/Costa Rica'), ('Pacific/Tahiti', 'Pacific/Tahiti'), ('Asia/Famagusta', 'Asia/Famagusta'), ('US/Pacific', 'US/Pacific'), ('Africa/Luanda', 'Africa/Luanda'), ('Europe/Malta', 'Europe/Malta'), ('America/Indiana/Vevay', 'America/Indiana/Vevay'), ('Etc/GMT-12', 'Etc/GMT-12'), ('America/Cordoba', 'America/Cordoba'), ('Africa/Porto-Novo', 'Africa/Porto-Novo'), ('Asia/Brunei', 'Asia/Brunei'), ('EET', 'EET'), ('Asia/Shanghai', 'Asia/Shanghai'), ('Asia/Atyrau', 'Asia/Atyrau'), ('Etc/GMT-4', 'Etc/GMT-4'), ('Antarctica/McMurdo', 'Antarctica/McMurdo'), ('America/North_Dakota/Center', 'America/North Dakota/Center'), ('America/Thunder_Bay', 'America/Thunder Bay'), ('America/Denver', 'America/Denver'), ('America/Kentucky/Monticello', 'America/Kentucky/Monticello'), ('Australia/Perth', 'Australia/Perth'), ('America/Edmonton', 'America/Edmonton'), ('Africa/Lagos', 'Africa/Lagos'), ('Africa/Addis_Ababa', 'Africa/Addis Ababa'), ('Africa/Ceuta', 'Africa/Ceuta'), ('GMT0', 'GMT0'), ('Asia/Chongqing', 'Asia/Chongqing'), ('America/Recife', 'America/Recife'), ('Europe/Simferopol', 'Europe/Simferopol'), ('America/New_York', 'America/New York'), ('Singapore', 'Singapore'), ('Africa/Maseru', 'Africa/Maseru'), ('America/Indiana/Marengo', 'America/Indiana/Marengo'), ('Pacific/Fakaofo', 'Pacific/Fakaofo'), ('US/Michigan', 'US/Michigan'), ('Pacific/Kanton', 'Pacific/Kanton'), ('Europe/Oslo', 'Europe/Oslo'), ('MET', 'MET'), ('America/Nuuk', 'America/Nuuk'), ('America/Resolute', 'America/Resolute'), ('America/Argentina/San_Luis', 'America/Argentina/San Luis'), ('Asia/Saigon', 'Asia/Saigon'), ('CET', 'CET'), ('Asia/Yakutsk', 'Asia/Yakutsk'), ('Antarctica/DumontDUrville', 'Antarctica/DumontDUrville'), ('America/Winnipeg', 'America/Winnipeg'), ('Australia/West', 'Australia/West'), ('America/North_Dakota/Beulah', 'America/North Dakota/Beulah'), ('Asia/Anadyr', 'Asia/Anadyr'), ('America/Curacao', 'America/Curacao'), ('US/Mountain', 'US/Mountain'), ('America/Porto_Acre', 'America/Porto Acre'), ('Pacific/Niue', 'Pacific/Niue'), ('Antarctica/Davis', 'Antarctica/Davis'), ('Asia/Damascus', 'Asia/Damascus'), ('Pacific/Bougainville', 'Pacific/Bougainville'), ('Asia/Srednekolymsk', 'Asia/Srednekolymsk'), ('Asia/Seoul', 'Asia/Seoul'), ('Asia/Tehran', 'Asia/Tehran'), ('America/Indiana/Tell_City', 'America/Indiana/Tell City'), ('Pacific/Midway', 'Pacific/Midway'), ('Atlantic/Bermuda', 'Atlantic/Bermuda'), ('CST6CDT', 'CST6CDT'), ('America/Porto_Velho', 'America/Porto Velho'), ('US/Arizona', 'US/Arizona'), ('Europe/Chisinau', 'Europe/Chisinau'), ('US/Samoa', 'US/Samoa'), ('America/Antigua', 'America/Antigua'), ('Africa/Djibouti', 'Africa/Djibouti'), ('America/Chicago', 'America/Chicago'), ('Pacific/Kwajalein', 'Pacific/Kwajalein'), ('Asia/Ulaanbaatar', 'Asia/Ulaanbaatar'), ('Europe/Saratov', 'Europe/Saratov'), ('Australia/Hobart', 'Australia/Hobart'), ('America/Blanc-Sablon', 'America/Blanc-Sablon'), ('America/Menominee', 'America/Menominee'), ('Australia/Currie', 'Australia/Currie'), ('America/Cambridge_Bay', 'America/Cambridge Bay'), ('America/Santiago', 'America/Santiago'), ('Brazil/West', 'Brazil/West'), ('America/Swift_Current', 'America/Swift Current'), ('Atlantic/Reykjavik', 'Atlantic/Reykjavik'), ('America/Virgin', 'America/Virgin'), ('America/Sao_Paulo', 'America/Sao Paulo'), ('America/Rio_Branco', 'America/Rio Branco'), ('Canada/Yukon', 'Canada/Yukon'), ('Asia/Bishkek', 'Asia/Bishkek'), ('America/Bahia_Banderas', 'America/Bahia Banderas'), ('America/Monterrey', 'America/Monterrey'), ('Pacific/Port_Moresby', 'Pacific/Port Moresby'), ('America/Guayaquil', 'America/Guayaquil'), ('Asia/Taipei', 'Asia/Taipei'), ('MST7MDT', 'MST7MDT'), ('GMT-0', 'GMT-0'), ('Indian/Cocos', 'Indian/Cocos'), ('Africa/Kinshasa', 'Africa/Kinshasa'), ('Atlantic/Jan_Mayen', 'Atlantic/Jan Mayen'), ('Pacific/Norfolk', 'Pacific/Norfolk'), ('America/Fort_Nelson', 'America/Fort Nelson'), ('America/Argentina/Jujuy', 'America/Argentina/Jujuy'), ('America/Indiana/Winamac', 'America/Indiana/Winamac'), ('Australia/Adelaide', 'Australia/Adelaide'), ('Asia/Chita', 'Asia/Chita'), ('Indian/Chagos', 'Indian/Chagos'), ('Etc/GMT+12', 'Etc/GMT+12'), ('Africa/Algiers', 'Africa/Algiers'), ('US/Hawaii', 'US/Hawaii'), ('America/Whitehorse', 'America/Whitehorse'), ('Pacific/Funafuti', 'Pacific/Funafuti'), ('Pacific/Noumea', 'Pacific/Noumea'), ('Etc/GMT-6', 'Etc/GMT-6'), ('Pacific/Johnston', 'Pacific/Johnston'), ('Greenwich', 'Greenwich'), ('America/St_Kitts', 'America/St Kitts'), ('Africa/Asmera', 'Africa/Asmera'), ('Pacific/Nauru', 'Pacific/Nauru'), ('Asia/Thimbu', 'Asia/Thimbu'), ('Antarctica/Casey', 'Antarctica/Casey'), ('America/Hermosillo', 'America/Hermosillo'), ('Asia/Ashgabat', 'Asia/Ashgabat'), ('Mexico/BajaSur', 'Mexico/BajaSur'), ('Europe/Nicosia', 'Europe/Nicosia'), ('Indian/Comoro', 'Indian/Comoro'), ('America/Belem', 'America/Belem'), ('Europe/Moscow', 'Europe/Moscow'), ('Asia/Bangkok', 'Asia/Bangkok'), ('Israel', 'Israel'), ('NZ-CHAT', 'NZ-CHAT'), ('US/Eastern', 'US/Eastern'), ('Europe/Kyiv', 'Europe/Kyiv'), ('Canada/Saskatchewan', 'Canada/Saskatchewan'), ('Asia/Jakarta', 'Asia/Jakarta'), ('PRC', 'PRC'), ('America/Knox_IN', 'America/Knox IN'), ('America/Punta_Arenas', 'America/Punta Arenas'), ('Africa/Conakry', 'Africa/Conakry'), ('Europe/Paris', 'Europe/Paris'), ('Africa/Tripoli', 'Africa/Tripoli'), ('Asia/Riyadh', 'Asia/Riyadh'), ('America/Lima', 'America/Lima'), ('America/Guadeloupe', 'America/Guadeloupe'), ('America/Shiprock', 'America/Shiprock'), ('Etc/UTC', 'Etc/UTC'), ('America/Aruba', 'America/Aruba'), ('Asia/Magadan', 'Asia/Magadan'), ('America/Araguaina', 'America/Araguaina'), ('America/Eirunepe', 'America/Eirunepe'), ('America/Marigot', 'America/Marigot'), ('Australia/Darwin', 'Australia/Darwin'), ('Brazil/Acre', 'Brazil/Acre'), ('Asia/Irkutsk', 'Asia/Irkutsk'), ('America/Caracas', 'America/Caracas'), ('Europe/Uzhgorod', 'Europe/Uzhgorod'), ('America/Inuvik', 'America/Inuvik'), ('Europe/Helsinki', 'Europe/Helsinki'), ('Europe/Tirane', 'Europe/Tirane'), ('Europe/Belgrade', 'Europe/Belgrade'), ('America/Montreal', 'America/Montreal'), ('MST', 'MST'), ('America/Bogota', 'America/Bogota'), ('EST', 'EST'), ('Australia/Eucla', 'Australia/Eucla'), ('America/Rosario', 'America/Rosario'), ('Africa/Windhoek', 'Africa/Windhoek'), ('Canada/Newfoundland', 'Canada/Newfoundland'), ('Asia/Novokuznetsk', 'Asia/Novokuznetsk'), ('Asia/Aqtobe', 'Asia/Aqtobe'), ('Australia/Lindeman', 'Australia/Lindeman'), ('Europe/Isle_of_Man', 'Europe/Isle of Man'), ('America/El_Salvador', 'America/El Salvador'), ('America/Cancun', 'America/Cancun'), ('America/Ciudad_Juarez', 'America/Ciudad Juarez'), ('America/Chihuahua', 'America/Chihuahua'), ('Etc/GMT+7', 'Etc/GMT+7'), ('Europe/Bucharest', 'Europe/Bucharest'), ('America/Guatemala', 'America/Guatemala'), ('Europe/Vilnius', 'Europe/Vilnius'), ('Europe/Dublin', 'Europe/Dublin')], default='America/Edmonton', max_length=100)),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified User')),
                ('receive_promo_emails', models.BooleanField(default=False, verbose_name='Receive promo email notifications')),
                ('receive_other_emails', models.BooleanField(default=False, verbose_name='Receive other email notifications')),
                ('loc_share_pref', models.CharField(choices=[('all', 'Show all'), ('country', 'Only display my country'), ('province', 'Include province and country'), ('city', 'Show city, province and country'), ('none', 'Hide all')], default='all', max_length=10, verbose_name='Location sharing preference')),
                ('tc_agreed', models.BooleanField(default=True, verbose_name='Accepted Terms and Conditions?')),
                ('address', models.CharField(blank=True, max_length=150, null=True)),
                ('city', models.CharField(blank=True, max_length=150, null=True)),
                ('province', models.CharField(blank=True, max_length=150, null=True)),
                ('country', models.CharField(blank=True, max_length=150, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=50, null=True)),
                ('website', models.URLField(blank=True, max_length=150, null=True)),
                ('facebook', models.CharField(blank=True, max_length=150, null=True)),
                ('instagram', models.CharField(blank=True, max_length=150, null=True)),
                ('twitter', models.CharField(blank=True, max_length=150, null=True)),
                ('tiktok', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tik Tok')),
                ('youtube', models.CharField(blank=True, max_length=150, null=True)),
                ('linkedin', models.CharField(blank=True, max_length=150, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date Joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dislikes', models.ManyToManyField(blank=True, related_name='profile_dislikes', to=settings.AUTH_USER_MODEL)),
                ('followers', models.ManyToManyField(blank=True, related_name='profile_followers', to=settings.AUTH_USER_MODEL)),
                ('genres', models.ManyToManyField(blank=True, to='core.genre')),
                ('interests', models.ManyToManyField(blank=True, to='core.interest')),
                ('likes', models.ManyToManyField(blank=True, related_name='profile_likes', to=settings.AUTH_USER_MODEL)),
                ('photos', models.ManyToManyField(blank=True, related_name='profile_photos', to='core.attachment')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
                ('videos', models.ManyToManyField(blank=True, related_name='profile_videos', to='core.attachment')),
            ],
        ),
        migrations.CreateModel(
            name='StudioLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('genres', models.ManyToManyField(blank=True, related_name='genres', related_query_name='genre', to='core.genre', verbose_name='Studio Location Genres')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.location')),
                ('studio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.studio')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Studio Location',
                'verbose_name_plural': 'Studio Locations',
                'unique_together': {('studio', 'location')},
            },
        ),
        migrations.CreateModel(
            name='StudioEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('title', models.CharField(max_length=250, verbose_name='title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('sched_type', models.CharField(choices=[('class', 'Dance Class'), ('open', 'Open Space'), ('event', 'Event'), ('unavail', 'Un-available'), ('closed', 'Closed')], default='class', max_length=7)),
                ('freq', models.CharField(choices=[('once', 'Once'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='once', max_length=10)),
                ('class_level', models.CharField(choices=[('any', 'Any'), ('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='any', max_length=12)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Price')),
                ('price_type', models.CharField(choices=[('hourly', 'Hourly'), ('daily', 'Daily'), ('total', 'Per Event')], default='hourly', max_length=6)),
                ('start_dt', models.DateTimeField(blank=True, null=True, verbose_name='Start Datetime')),
                ('end_dt', models.DateTimeField(blank=True, null=True, verbose_name='End Datetime')),
                ('freq_end', models.DateField(blank=True, null=True, verbose_name='End Datetime')),
                ('image', models.ImageField(blank=True, max_length=150, null=True, upload_to=core.models.classifieds.get_event_path, verbose_name='Event Image')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('studio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.studio')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Studio Event',
                'verbose_name_plural': 'Studio Events',
            },
        ),
        migrations.AddField(
            model_name='studio',
            name='locations',
            field=models.ManyToManyField(blank=True, through='core.StudioLocation', to='core.location', verbose_name='Locations'),
        ),
        migrations.AddField(
            model_name='studio',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.userprofile', verbose_name='UserProfile'),
        ),
        migrations.AddField(
            model_name='studio',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Unique Name')),
                ('label', models.CharField(max_length=150, verbose_name='Option Front End Display Name')),
                ('value', models.CharField(max_length=500, verbose_name='Value')),
                ('value_type', models.CharField(choices=[('text', 'Text'), ('int', 'Integer'), ('num', 'Number'), ('date', 'Date'), ('time', 'Time')], default='text', max_length=6, verbose_name='Value Type')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Option',
                'verbose_name_plural': 'Options',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Is listing approved')),
                ('title', models.CharField(max_length=250, verbose_name='title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('listing_type', models.CharField(blank=True, choices=[('teaching', 'Teaching'), ('casting', 'Casting Callout'), ('other', 'Other')], max_length=10, null=True, verbose_name='Listing type')),
                ('start_dt', models.DateTimeField(blank=True, null=True, verbose_name='Start Datetime')),
                ('expiry_dt', models.DateTimeField(blank=True, null=True, verbose_name='Expiry Date')),
                ('can_apply', models.BooleanField(default=False, verbose_name='Allow application to this listing?')),
                ('applicant_age', models.CharField(blank=True, choices=[('1', '0 - 9'), ('2', '10 - 18'), ('3', '19 - 29'), ('4', '30 - 49'), ('5', '50 or greater')], max_length=10, null=True, verbose_name='Applicant age range')),
                ('applicant_gender', models.CharField(blank=True, choices=[('any', 'Any'), ('female', 'Female'), ('male', 'Male'), ('other', 'Other')], max_length=6, null=True, verbose_name='Applicant gender')),
                ('loc_option', models.CharField(blank=True, choices=[('onsite', 'On-Site'), ('inperson', 'In Person'), ('international', 'International'), ('travel', 'Travel ')], max_length=13, null=True, verbose_name='Location Option')),
                ('pay', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Pay')),
                ('price_type', models.CharField(choices=[('hourly', 'Hourly'), ('daily', 'Daily'), ('total', 'Per Event')], default='hourly', max_length=6)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('files', models.ManyToManyField(blank=True, to='core.attachment', verbose_name='files')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Listing',
                'verbose_name_plural': 'Listings',
            },
        ),
        migrations.CreateModel(
            name='GoogleTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=120, verbose_name='Google Tag name')),
                ('placement', models.CharField(choices=[('head', 'Head'), ('top_body', 'Inside Body Top'), ('bottom_body', 'Inside Body Bottom'), ('footer', 'Footer')], default='head', max_length=11, verbose_name='Tag Placement')),
                ('script', models.TextField(blank=True, null=True, verbose_name='Script to insert')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Google Tag',
                'verbose_name_plural': 'Google Tags',
            },
        ),
        migrations.CreateModel(
            name='ForumTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Is topic approved')),
                ('archive_date', models.DateTimeField(blank=True, null=True, verbose_name='Date topic archived')),
                ('title', models.CharField(max_length=500, verbose_name='Forum Topic')),
                ('body', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('comments', models.ManyToManyField(blank=True, related_name='forum_topic_comments', to='core.comment', verbose_name='Forum Comments')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('dislikes', models.ManyToManyField(blank=True, related_name='forumtopic_dislikes', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='forumtopic_likes', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Forum Topic',
                'verbose_name_plural': 'Forum Topics',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('title', models.CharField(max_length=200, verbose_name='FAQ title')),
                ('body', models.TextField(blank=True, null=True, verbose_name='FAQ Body')),
                ('disp_order', models.IntegerField(default=1, verbose_name='Display Order')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
                'ordering': ['title', 'disp_order'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('title', models.CharField(max_length=250, verbose_name='title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('start_dt', models.DateTimeField(blank=True, null=True, verbose_name='Start Datetime')),
                ('end_dt', models.DateTimeField(blank=True, null=True, verbose_name='End Datetime')),
                ('image', models.ImageField(max_length=150, upload_to=core.models.classifieds.get_event_path, verbose_name='Event Image')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.location', verbose_name='Location')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='Advertisement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=120, verbose_name='Ad name')),
                ('placement', models.CharField(choices=[('head', 'Head'), ('top_body', 'Inside Body Top'), ('bottom_body', 'Inside Body Bottom'), ('footer', 'Footer'), ('sidebar', 'Sidebar')], default='head', max_length=11, verbose_name='Tag Placement')),
                ('shape', models.CharField(choices=[('square', 'Square'), ('circle', 'Circle'), ('horizontal', 'Horizontal'), ('vertical', 'Vertical')], default='landscape', max_length=11, verbose_name='Tag Shape')),
                ('ad_type', models.CharField(choices=[('script', 'Script'), ('image', 'Image')], default='image', max_length=6, verbose_name='Ad Type')),
                ('script', models.TextField(blank=True, null=True, verbose_name='Script to insert')),
                ('image', models.ImageField(max_length=150, upload_to=core.models.util.get_advert_path, verbose_name='Ad Image')),
                ('image_target', models.CharField(blank=True, max_length=150, null=True, verbose_name='External link for image ad')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Advertisement',
                'verbose_name_plural': 'Advertisements',
            },
        ),
    ]
